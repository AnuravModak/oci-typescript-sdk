/**
 * DevOps API
 * Use the DevOps APIs to create a DevOps project to group the pipelines,  add reference to target deployment environments, add artifacts to deploy,  and create deployment pipelines needed to deploy your software.
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Specifies the Function stage.
 */
export interface FunctionDeployStageSummary extends model.DeployStageSummary {
  /**
   * Function environment OCID.
   */
  "functionDeployEnvironmentId": string;
  /**
   * A Docker image artifact OCID.
   */
  "dockerImageDeployArtifactId": string;
  /**
   * User provided key and value pair configuration, which is assigned through constants or parameter.
   */
  "config"?: { [key: string]: string };
  /**
   * Maximum usable memory for the Function (in MB). Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "maxMemoryInMBs"?: number;
  /**
   * Timeout for execution of the Function. Value in seconds. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "functionTimeoutInSeconds"?: number;

  "deployStageType": string;
}

export namespace FunctionDeployStageSummary {
  export function getJsonObj(obj: FunctionDeployStageSummary, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.DeployStageSummary.getJsonObj(obj) as FunctionDeployStageSummary)),
      ...{}
    };

    return jsonObj;
  }
  export const deployStageType = "DEPLOY_FUNCTION";
}
