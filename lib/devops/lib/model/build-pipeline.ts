/**
 * DevOps API
 * Use the DevOps APIs to create a DevOps project to group the pipelines,  add reference to target deployment environments, add artifacts to deploy,  and create deployment pipelines needed to deploy your software.
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * A set of stages whose predecessor relation forms a directed acyclic graph.
 */
export interface BuildPipeline {
  /**
   * Unique identifier that is immutable on creation
   */
  "id": string;
  /**
   * Optional description about the BuildPipeline
   */
  "description"?: string;
  /**
   * BuildPipeline identifier which can be renamed and is not necessarily unique
   */
  "displayName"?: string;
  /**
   * Compartment Identifier
   */
  "compartmentId": string;
  /**
   * Project Identifier
   */
  "projectId": string;
  /**
   * The time the BuildPipeline was created. An RFC3339 formatted datetime string
   */
  "timeCreated"?: Date;
  /**
   * The time at which the BuildPipeline was updated. An RFC3339 formatted datetime string
   */
  "timeUpdated"?: Date;
  /**
   * The current state of the BuildPipeline.
   */
  "lifecycleState"?: BuildPipeline.LifecycleState;
  /**
   * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
   */
  "lifecycleDetails"?: string;
  "buildPipelineParameters"?: model.BuildPipelineParameterCollection;
  /**
   * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm). Example: `{\"bar-key\": \"value\"}`
   */
  "freeformTags"?: { [key: string]: string };
  /**
   * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm). Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
  /**
   * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm). Example: `{\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}`
   */
  "systemTags"?: { [key: string]: { [key: string]: any } };
}

export namespace BuildPipeline {
  export enum LifecycleState {
    Creating = "CREATING",
    Updating = "UPDATING",
    Active = "ACTIVE",
    Inactive = "INACTIVE",
    Deleting = "DELETING",
    Deleted = "DELETED",
    Failed = "FAILED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: BuildPipeline): object {
    const jsonObj = {
      ...obj,
      ...{
        "buildPipelineParameters": obj.buildPipelineParameters
          ? model.BuildPipelineParameterCollection.getJsonObj(obj.buildPipelineParameters)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: BuildPipeline): object {
    const jsonObj = {
      ...obj,
      ...{
        "buildPipelineParameters": obj.buildPipelineParameters
          ? model.BuildPipelineParameterCollection.getDeserializedJsonObj(
              obj.buildPipelineParameters
            )
          : undefined
      }
    };

    return jsonObj;
  }
}
