/**
 * DevOps API
 * Use the DevOps APIs to create a DevOps project to group the pipelines,  add reference to target deployment environments, add artifacts to deploy,  and create deployment pipelines needed to deploy your software.
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Specifies the Run details for Build Stage.
 */
export interface BuildStageRunProgress extends model.BuildPipelineStageRunProgress {
  /**
   * Name of Build Runner shape where this Build Stage is running.
   */
  "actualBuildRunnerShape"?: string;
  "actualBuildRunnerShapeConfig"?: model.ActualBuildRunnerShapeConfig;
  /**
   * Image name for the Build Environment
   */
  "image": BuildStageRunProgress.Image;
  /**
   * The path to the build specification file for this Environment. The default location if not specified is build_spec.yaml
   */
  "buildSpecFile"?: string;
  /**
   * Timeout for the Build Stage Execution. Value in seconds. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "stageExecutionTimeoutInSeconds"?: number;
  "buildSourceCollection": model.BuildSourceCollection;
  /**
   * Name of the BuildSource in which the build_spec.yml file need to be located. If not specified, the 1st entry in the BuildSource collection will be chosen as Primary.
   */
  "primaryBuildSource"?: string;
  /**
   * The details about all the steps in a Build Stage
   */
  "steps"?: Array<model.BuildStageRunStep>;
  "exportedVariables"?: model.ExportedVariableCollection;

  "buildPipelineStageType": string;
}

export namespace BuildStageRunProgress {
  export enum Image {
    Ol7X8664Standard10 = "OL7_X86_64_STANDARD_10",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: BuildStageRunProgress, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.BuildPipelineStageRunProgress.getJsonObj(obj) as BuildStageRunProgress)),
      ...{
        "actualBuildRunnerShapeConfig": obj.actualBuildRunnerShapeConfig
          ? model.ActualBuildRunnerShapeConfig.getJsonObj(obj.actualBuildRunnerShapeConfig)
          : undefined,

        "buildSourceCollection": obj.buildSourceCollection
          ? model.BuildSourceCollection.getJsonObj(obj.buildSourceCollection)
          : undefined,

        "steps": obj.steps
          ? obj.steps.map(item => {
              return model.BuildStageRunStep.getJsonObj(item);
            })
          : undefined,
        "exportedVariables": obj.exportedVariables
          ? model.ExportedVariableCollection.getJsonObj(obj.exportedVariables)
          : undefined
      }
    };

    return jsonObj;
  }
  export const buildPipelineStageType = "BUILD";
  export function getDeserializedJsonObj(
    obj: BuildStageRunProgress,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.BuildPipelineStageRunProgress.getDeserializedJsonObj(
            obj
          ) as BuildStageRunProgress)),
      ...{
        "actualBuildRunnerShapeConfig": obj.actualBuildRunnerShapeConfig
          ? model.ActualBuildRunnerShapeConfig.getDeserializedJsonObj(
              obj.actualBuildRunnerShapeConfig
            )
          : undefined,

        "buildSourceCollection": obj.buildSourceCollection
          ? model.BuildSourceCollection.getDeserializedJsonObj(obj.buildSourceCollection)
          : undefined,

        "steps": obj.steps
          ? obj.steps.map(item => {
              return model.BuildStageRunStep.getDeserializedJsonObj(item);
            })
          : undefined,
        "exportedVariables": obj.exportedVariables
          ? model.ExportedVariableCollection.getDeserializedJsonObj(obj.exportedVariables)
          : undefined
      }
    };

    return jsonObj;
  }
}
