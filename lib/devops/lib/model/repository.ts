/**
 * DevOps API
 * Use the DevOps APIs to create a DevOps project to group the pipelines,  add reference to target deployment environments, add artifacts to deploy,  and create deployment pipelines needed to deploy your software.
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Description of Repository.
 */
export interface Repository {
  /**
   * The OCID of the repository. This value is unique and immutable.
   */
  "id": string;
  /**
   * Unique name of a repository. This value is mutable.
   */
  "name"?: string;
  /**
   * The OCID of the repository's Compartment.
   */
  "compartmentId": string;
  /**
   * Tenancy unique namespace
   */
  "namespace"?: string;
  /**
   * The OCID of the Project containing the repository.
   */
  "projectId": string;
  /**
   * Project unique Name under namespace
   */
  "projectName"?: string;
  /**
   * ssh url user utilized to git clone, pull and push
   */
  "sshUrl"?: string;
  /**
   * http url user utilized to git clone, pull and push
   */
  "httpUrl"?: string;
  /**
   * The description of this repository. Avoid entering confidential information
   */
  "description"?: string;
  /**
   * The default branch of the repository
   */
  "defaultBranch"?: string;
  /**
   * Type of repository
   * MIRRORED - Repository was created by mirroring an existing repository.
   * HOSTED - Repository was created and hosted using OCI Devops Code Repository.
   *
   */
  "repositoryType"?: Repository.RepositoryType;
  "mirrorRepositoryConfig"?: model.MirrorRepositoryConfig;
  /**
   * The time the the Repository was created. An RFC3339 formatted datetime string
   */
  "timeCreated"?: Date;
  /**
   * The time the Repository was updated. An RFC3339 formatted datetime string
   */
  "timeUpdated"?: Date;
  /**
   * The current state of the Repository.
   */
  "lifecycleState"?: Repository.LifecycleState;
  /**
   * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
   */
  "lifecyleDetails"?: string;
  /**
   * The count of the branches present in the repository. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "branchCount"?: number;
  /**
   * The count of the commits present in the repository. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "commitCount"?: number;
  /**
   * The size of the repository in bytes. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "sizeInBytes"?: number;
  /**
   * Trigger Build Events supported for this repository
   * PUSH - Build is triggered when a push event occurs
   * COMMIT_UPDATES - Build is triggered when new commits are mirrored into repository
   *
   */
  "triggerBuildEvents"?: Array<Repository.TriggerBuildEvents>;
  /**
   * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm). Example: `{\"bar-key\": \"value\"}`
   */
  "freeformTags"?: { [key: string]: string };
  /**
   * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm). Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
  /**
   * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm). Example: `{\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}`
   */
  "systemTags"?: { [key: string]: { [key: string]: any } };
}

export namespace Repository {
  export enum RepositoryType {
    Mirrored = "MIRRORED",
    Hosted = "HOSTED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum LifecycleState {
    Active = "ACTIVE",
    Creating = "CREATING",
    Deleted = "DELETED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum TriggerBuildEvents {
    Push = "PUSH",
    CommitUpdates = "COMMIT_UPDATES",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: Repository): object {
    const jsonObj = {
      ...obj,
      ...{
        "mirrorRepositoryConfig": obj.mirrorRepositoryConfig
          ? model.MirrorRepositoryConfig.getJsonObj(obj.mirrorRepositoryConfig)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: Repository): object {
    const jsonObj = {
      ...obj,
      ...{
        "mirrorRepositoryConfig": obj.mirrorRepositoryConfig
          ? model.MirrorRepositoryConfig.getDeserializedJsonObj(obj.mirrorRepositoryConfig)
          : undefined
      }
    };

    return jsonObj;
  }
}
