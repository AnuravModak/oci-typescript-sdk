/**
 * VisionService API
 * A description of the VisionService API.
 * OpenAPI spec version: 20220125
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Job details for a batch image analysis.
 */
export interface ImageJob {
  /**
   * Job id
   */
  "id": string;
  /**
   * The OCID of the compartment that starts the job.
   */
  "compartmentId": string;
  /**
   * Image job display name.
   */
  "displayName"?: string;
  /**
   * List of document analysis types requested.
   */
  "features": Array<model.ImageFeature>;
  "inputLocation"?: model.ObjectListInlineInputLocation;
  /**
   * Job accepted time.
   */
  "timeAccepted": Date;
  /**
   * Job started time.
   */
  "timeStarted"?: Date;
  /**
   * Job finished time.
   */
  "timeFinished"?: Date;
  /**
   * How much progress the operation has made, vs the total amount of work that must be performed. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "percentComplete"?: number;
  "outputLocation": model.OutputLocation;
  /**
   * The current state of the batch image job.
   */
  "lifecycleState": ImageJob.LifecycleState;
  /**
   * Detailed status of FAILED state.
   */
  "lifecycleDetails"?: ImageJob.LifecycleDetails;
  /**
   * Whether to generate a Zip file containing the results.
   */
  "isZipOutputEnabled"?: boolean;
}

export namespace ImageJob {
  export enum LifecycleState {
    Succeeded = "SUCCEEDED",
    Failed = "FAILED",
    Accepted = "ACCEPTED",
    Canceled = "CANCELED",
    InProgress = "IN_PROGRESS",
    Canceling = "CANCELING",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum LifecycleDetails {
    PartiallySucceeded = "PARTIALLY_SUCCEEDED",
    CompletelyFailed = "COMPLETELY_FAILED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: ImageJob): object {
    const jsonObj = {
      ...obj,
      ...{
        "features": obj.features
          ? obj.features.map(item => {
              return model.ImageFeature.getJsonObj(item);
            })
          : undefined,
        "inputLocation": obj.inputLocation
          ? model.InputLocation.getJsonObj(obj.inputLocation)
          : undefined,

        "outputLocation": obj.outputLocation
          ? model.OutputLocation.getJsonObj(obj.outputLocation)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ImageJob): object {
    const jsonObj = {
      ...obj,
      ...{
        "features": obj.features
          ? obj.features.map(item => {
              return model.ImageFeature.getDeserializedJsonObj(item);
            })
          : undefined,
        "inputLocation": obj.inputLocation
          ? model.InputLocation.getDeserializedJsonObj(obj.inputLocation)
          : undefined,

        "outputLocation": obj.outputLocation
          ? model.OutputLocation.getDeserializedJsonObj(obj.outputLocation)
          : undefined
      }
    };

    return jsonObj;
  }
}
