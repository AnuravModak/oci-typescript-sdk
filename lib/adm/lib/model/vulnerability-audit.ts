/**
 * ADM API
 * Use the ADM API to create ADM knowledge base and vulnerability audits.  For more information, see [ADM](/Content/adm/using/home.htm).
 * OpenAPI spec version: 20220421
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * A Vulnerability Audit associates the Application Dependencies of a project with their associated vulnerabilities.
 * Each Vulnerability is associated with a score (Common Vulnerability Scoring System V2 or V3).
 *
 */
export interface VulnerabilityAudit {
  /**
   * The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)) of the Vulnerability Audit.
   */
  "id": string;
  /**
   * The name of the Vulnerability Audit.
   */
  "displayName"?: string;
  /**
   * The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
   */
  "knowledgeBaseId": string;
  /**
   * The creation date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
   */
  "timeCreated": Date;
  /**
   * The update date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
   */
  "timeUpdated": Date;
  /**
   * The current lifecycle state of the Vulnerability Audit.
   */
  "lifecycleState": VulnerabilityAudit.LifecycleState;
  /**
   * List of vulnerabilities found in the Vulnerability Audit.
   */
  "vulnerabilities": Array<model.Vulnerability>;
  /**
   * Maximum Common Vulnerability Scoring System Version 2 score of vulnerabilities. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "maxObservedCvssV2Score": number;
  /**
   * Maximum Common Vulnerability Scoring System Version 3 score of vulnerabilities. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "maxObservedCvssV3Score": number;
  /**
   * Count of vulnerable artifacts. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "vulnerableArtifactsCount": number;
  "configuration"?: model.VulnerabilityAuditConfiguration;
  /**
   * Indicates if an audit succeeded according to the configuration. The value is `null` if the audit is in the `CREATING` state.
   */
  "isSuccess"?: boolean;
  /**
   * The type of the build tool.
   */
  "buildType": VulnerabilityAudit.BuildType;
  /**
   * The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)) of the compartment associated with the Vulnerability Audit.
   */
  "compartmentId": string;
  /**
   * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
   * Example: `{\"bar-key\": \"value\"}`
   *
   */
  "freeformTags"?: { [key: string]: string };
  /**
   * Defined tags for this resource. Each key is predefined and scoped to a namespace.
   * Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
   *
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
  /**
   * Usage of system tag keys. These predefined keys are scoped to namespaces.
   * Example: `{\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}`
   *
   */
  "systemTags"?: { [key: string]: { [key: string]: any } };
}

export namespace VulnerabilityAudit {
  export enum LifecycleState {
    Active = "ACTIVE",
    Creating = "CREATING",
    Deleted = "DELETED",
    Deleting = "DELETING",
    Failed = "FAILED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum BuildType {
    Maven = "MAVEN",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: VulnerabilityAudit): object {
    const jsonObj = {
      ...obj,
      ...{
        "vulnerabilities": obj.vulnerabilities
          ? obj.vulnerabilities.map(item => {
              return model.Vulnerability.getJsonObj(item);
            })
          : undefined,

        "configuration": obj.configuration
          ? model.VulnerabilityAuditConfiguration.getJsonObj(obj.configuration)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: VulnerabilityAudit): object {
    const jsonObj = {
      ...obj,
      ...{
        "vulnerabilities": obj.vulnerabilities
          ? obj.vulnerabilities.map(item => {
              return model.Vulnerability.getDeserializedJsonObj(item);
            })
          : undefined,

        "configuration": obj.configuration
          ? model.VulnerabilityAuditConfiguration.getDeserializedJsonObj(obj.configuration)
          : undefined
      }
    };

    return jsonObj;
  }
}
