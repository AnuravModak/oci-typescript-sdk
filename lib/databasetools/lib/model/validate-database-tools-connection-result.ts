/**
 * Database Tools
 * Database Tools APIs to manage Connections and Private Endpoints.
 * OpenAPI spec version: 20201005
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Connection validation result.
 */
export interface ValidateDatabaseToolsConnectionResult {
  /**
   * A short code that defines the result of the validation, meant for programmatic parsing.
   */
  "code": string;
  /**
   * A human-readable message that describes the result of the validation.
   */
  "message": string;
  /**
   * A human-readable message that describes possible causes for the validation error.
   */
  "cause"?: string;
  /**
   * A human-readable message that suggests a remedial action to resolve the validation error.
   */
  "action"?: string;

  "type": string;
}

export namespace ValidateDatabaseToolsConnectionResult {
  export function getJsonObj(obj: ValidateDatabaseToolsConnectionResult): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "type" in obj && obj.type) {
      switch (obj.type) {
        case "ORACLE_DATABASE":
          return model.ValidateDatabaseToolsConnectionOracleDatabaseResult.getJsonObj(
            <model.ValidateDatabaseToolsConnectionOracleDatabaseResult>(<object>jsonObj),
            true
          );
        default:
          throw Error("Unknown value for: " + obj.type);
      }
    }
    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ValidateDatabaseToolsConnectionResult): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "type" in obj && obj.type) {
      switch (obj.type) {
        case "ORACLE_DATABASE":
          return model.ValidateDatabaseToolsConnectionOracleDatabaseResult.getDeserializedJsonObj(
            <model.ValidateDatabaseToolsConnectionOracleDatabaseResult>(<object>jsonObj),
            true
          );
        default:
          throw Error("Unknown value for: " + obj.type);
      }
    }
    return jsonObj;
  }
}
