/**
 * UsageApi API
 * A description of the UsageApi API.
 * OpenAPI spec version: 20190111
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Object describing the rewards summary for a month for the requested subscriptionId.
 */
export interface MonthlyRewardSummary {
  /**
   * The number of rewards available for a specific usage period. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "availableRewards"?: number;
  /**
   * The number of rewards redeemed for a specific month. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "redeemedRewards"?: number;
  /**
   * The number of rewards earned for the specific usage period. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "earnedRewards"?: number;
  /**
   * The boolean flag to tell if the available rewards are posted manually or not.
   */
  "isManual"?: boolean;
  /**
   * The date and time on which rewards are expired.
   */
  "timeRewardsExpired"?: Date;
  /**
   * The date and time on which rewards are accrued.
   *
   */
  "timeRewardsEarned"?: Date;
  /**
   * The start date and time for the usage period.
   *
   */
  "timeUsageStarted"?: Date;
  /**
   * The end date and time for the usage period.
   *
   */
  "timeUsageEnded"?: Date;
  /**
   * The usage amount for the usage period.
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "usageAmount"?: number;
  /**
   * The eligible usage amount for the usage period.
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "eligibleUsageAmount"?: number;
  /**
   * The in eligible usage amount for the usage period.
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "ineligibleUsageAmount"?: number;
  /**
   * The id for the usage period.
   *
   */
  "usagePeriodKey"?: string;
}

export namespace MonthlyRewardSummary {
  export function getJsonObj(obj: MonthlyRewardSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: MonthlyRewardSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
