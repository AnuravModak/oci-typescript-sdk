/**
 * Database Management API
 * Use the Database Management API to perform tasks such as obtaining performance and resource usage metrics
for a fleet of Managed Databases or a specific Managed Database, creating Managed Database Groups, and
running a SQL job on a Managed Database or Managed Database Group.

 * OpenAPI spec version: 20201101
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * A Database Management private endpoint that allows Database Management services to connect to databases in a customer's virtual cloud network (VCN).
 */
export interface DbManagementPrivateEndpoint {
  /**
   * The OCID of the Database Management private endpoint.
   */
  "id": string;
  /**
   * The display name of the private endpoint.
   */
  "name": string;
  /**
   * The OCID of the compartment.
   */
  "compartmentId": string;
  /**
   * The OCID of the VCN.
   */
  "vcnId": string;
  /**
   * The OCID of the subnet.
   */
  "subnetId": string;
  /**
   * The private IP addresses assigned to the private endpoint.
   *
   */
  "privateIp"?: string;
  /**
   * The description of the private endpoint.
   */
  "description"?: string;
  /**
   * The date and time the private endpoint was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
   */
  "timeCreated"?: Date;
  /**
   * The current state of the private endpoint.
   */
  "lifecycleState"?: model.LifecycleStates;
  /**
   * The OCIDs of the network security groups that the private endpoint belongs to.
   *
   */
  "nsgIds"?: Array<string>;
}

export namespace DbManagementPrivateEndpoint {
  export function getJsonObj(obj: DbManagementPrivateEndpoint): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: DbManagementPrivateEndpoint): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
