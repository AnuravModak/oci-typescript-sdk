/**
 * Database Management API
 * Use the Database Management API to perform tasks such as obtaining performance and resource usage metrics
for a fleet of Managed Databases or a specific Managed Database, creating Managed Database Groups, and
running a SQL job on a Managed Database or Managed Database Group.

 * OpenAPI spec version: 20201101
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The summary of a SQL plan baseline.
 */
export interface SqlPlanBaselineSummary {
  /**
   * The unique plan identifier.
   */
  "planName": string;
  /**
   * The unique SQL identifier.
   */
  "sqlHandle": string;
  /**
   * The SQL text (truncated to the first 50 characters).
   */
  "sqlText": string;
  /**
   * The origin of the SQL plan baseline.
   */
  "origin"?: model.SqlPlanBaselineOrigin;
  /**
   * The date and time when the plan baseline was created.
   */
  "timeCreated": Date;
  /**
   * The date and time when the plan baseline was last modified.
   */
  "timeLastModified"?: Date;
  /**
   * The date and time when the plan baseline was last executed.
   * <p>
   **Note:** For performance reasons, database does not update this value
   * immediately after each execution of the plan baseline. Therefore, the plan
   * baseline may have been executed more recently than this value indicates.
   *
   */
  "timeLastExecuted"?: Date;
  /**
   * Indicates whether the plan baseline is enabled (`YES`) or disabled (`NO`).
   */
  "enabled"?: string;
  /**
   * Indicates whether the plan baseline is accepted (`YES`) or not (`NO`).
   */
  "accepted"?: string;
  /**
   * Indicates whether the plan baseline is fixed (`YES`) or not (`NO`).
   */
  "fixed"?: string;
  /**
   * Indicates whether the optimizer was able to reproduce the plan (`YES`) or not (`NO`).
   * The value is set to `YES` when a plan is initially added to the plan baseline.
   *
   */
  "reproduced"?: string;
  /**
   * Indicates whether the plan baseline is auto-purged (`YES`) or not (`NO`).
   */
  "autoPurge"?: string;
  /**
    * Indicates whether a plan that is automatically captured by SQL plan management is marked adaptive or not.
* <p>
When a new adaptive plan is found for a SQL statement that has an existing SQL plan baseline, that new plan
* will be added to the SQL plan baseline as an unaccepted plan, and the `ADAPTIVE` property will be marked `YES`.
* When this new plan is verified (either manually or via the auto evolve task), the plan will be test executed
* and the final plan determined at execution will become an accepted plan if its performance is better than
* the existing plan baseline. At this point, the value of the `ADAPTIVE` property is set to `NO` since the plan
* is no longer adaptive, but resolved.
* 
    */
  "adaptive"?: string;
}

export namespace SqlPlanBaselineSummary {
  export function getJsonObj(obj: SqlPlanBaselineSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: SqlPlanBaselineSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
