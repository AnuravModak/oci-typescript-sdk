/**
 * Data Integration API
 * Use the Data Integration Service APIs to perform common extract, load, and transform (ETL) tasks.
 * OpenAPI spec version: 20200430
 * Contact: di_dis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Properties used in data asset update operations.
 */
export interface UpdateDataAssetDetails {
  /**
   * Generated key that can be used in API calls to identify data asset.
   */
  "key": string;
  /**
   * The model version of an object.
   */
  "modelVersion"?: string;
  /**
   * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value can be edited by the user and it is restricted to 1000 characters
   */
  "name"?: string;
  /**
   * Detailed description for the object.
   */
  "description"?: string;
  /**
   * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
   */
  "objectStatus"?: number;
  /**
   * The version of the object that is used to track changes in the object instance.
   */
  "objectVersion": number;
  /**
   * Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be edited by the user.
   */
  "identifier"?: string;
  /**
   * The external key for the object
   */
  "externalKey"?: string;
  /**
   * assetProperties
   */
  "assetProperties"?: { [key: string]: string };
  "registryMetadata"?: model.RegistryMetadata;

  "modelType": string;
}

export namespace UpdateDataAssetDetails {
  export function getJsonObj(obj: UpdateDataAssetDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "registryMetadata": obj.registryMetadata
          ? model.RegistryMetadata.getJsonObj(obj.registryMetadata)
          : undefined
      }
    };

    if ("modelType" in obj && obj.modelType) {
      switch (obj.modelType) {
        case "ORACLE_ATP_DATA_ASSET":
          return model.UpdateDataAssetFromAtp.getJsonObj(
            <model.UpdateDataAssetFromAtp>(<object>jsonObj),
            true
          );
        case "ORACLE_ADWC_DATA_ASSET":
          return model.UpdateDataAssetFromAdwc.getJsonObj(
            <model.UpdateDataAssetFromAdwc>(<object>jsonObj),
            true
          );
        case "ORACLE_OBJECT_STORAGE_DATA_ASSET":
          return model.UpdateDataAssetFromObjectStorage.getJsonObj(
            <model.UpdateDataAssetFromObjectStorage>(<object>jsonObj),
            true
          );
        case "ORACLE_DATA_ASSET":
          return model.UpdateDataAssetFromOracle.getJsonObj(
            <model.UpdateDataAssetFromOracle>(<object>jsonObj),
            true
          );
        default:
          throw Error("Unknown value for: " + obj.modelType);
      }
    }
    return jsonObj;
  }
}
