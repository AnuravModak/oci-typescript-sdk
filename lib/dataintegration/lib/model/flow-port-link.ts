/**
 * Data Integration API
 * Use the Data Integration Service APIs to perform common extract, load, and transform (ETL) tasks.
 * OpenAPI spec version: 20200430
 * Contact: di_dis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details about the link between two data flow operators.
 */
export interface FlowPortLink {
  /**
   * The key of the object.
   */
  "key"?: string;
  /**
   * The model version of an object.
   */
  "modelVersion"?: string;
  "parentRef"?: model.ParentReference;
  /**
   * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
   */
  "objectStatus"?: number;
  /**
   * Detailed description for the object.
   */
  "description"?: string;
  /**
   * Key of FlowPort reference
   */
  "port"?: string;

  "modelType": string;
}

export namespace FlowPortLink {
  export function getJsonObj(obj: FlowPortLink): object {
    const jsonObj = {
      ...obj,
      ...{
        "parentRef": obj.parentRef ? model.ParentReference.getJsonObj(obj.parentRef) : undefined
      }
    };

    if ("modelType" in obj && obj.modelType) {
      switch (obj.modelType) {
        case "INPUT_LINK":
          return model.InputLink.getJsonObj(<model.InputLink>(<object>jsonObj), true);
        case "OUTPUT_LINK":
          return model.OutputLink.getJsonObj(<model.OutputLink>(<object>jsonObj), true);
        case "CONDITIONAL_INPUT_LINK":
          return model.ConditionalInputLink.getJsonObj(
            <model.ConditionalInputLink>(<object>jsonObj),
            true
          );
        default:
          throw Error("Unknown value for: " + obj.modelType);
      }
    }
    return jsonObj;
  }
}
