/**
 * Marketplace Service API
 * Manage applications in Oracle Cloud Infrastructure Marketplace.
 * OpenAPI spec version: 20181001
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * A base object for all types of publication packages.
 */
export interface PublicationPackage {
  /**
   * Description of this package.
   */
  "description"?: string;
  /**
   * The ID of the listing this package belongs to.
   */
  "listingId": string;
  /**
   * The package version.
   */
  "version": string;
  /**
   * The unique identifier for the package resource.
   */
  "resourceId"?: string;
  /**
    * The date and time this listing package was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339)
* timestamp format.
* <p>
Example: `2016-08-25T21:10:29.600Z`
* 
    */
  "timeCreated"?: Date;
  "operatingSystem"?: model.OperatingSystem;

  "packageType": string;
}

export namespace PublicationPackage {
  export function getJsonObj(obj: PublicationPackage): object {
    const jsonObj = {
      ...obj,
      ...{
        "operatingSystem": obj.operatingSystem
          ? model.OperatingSystem.getJsonObj(obj.operatingSystem)
          : undefined
      }
    };

    if ("packageType" in obj && obj.packageType) {
      switch (obj.packageType) {
        case "ORCHESTRATION":
          return model.OrchestrationPublicationPackage.getJsonObj(
            <model.OrchestrationPublicationPackage>(<object>jsonObj),
            true
          );
        case "IMAGE":
          return model.ImagePublicationPackage.getJsonObj(
            <model.ImagePublicationPackage>(<object>jsonObj),
            true
          );
        default:
          throw Error("Unknown value for: " + obj.packageType);
      }
    }
    return jsonObj;
  }
}
