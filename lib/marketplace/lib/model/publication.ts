/**
 * Marketplace Service API
 * Manage applications in Oracle Cloud Infrastructure Marketplace.
 * OpenAPI spec version: 20181001
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The model for an Oracle Cloud Infrastructure Marketplace Publication
 */
export interface Publication {
  /**
   * The state of the listing in its lifecycle
   */
  "lifecycleState"?: Publication.LifecycleState;
  /**
   * The Compartment id where the listings exists
   */
  "compartmentId": string;
  /**
   * The unique identifier for the listing in Marketplace.
   */
  "id": string;
  /**
   * The name of the listing.
   */
  "name": string;
  /**
   * A short description of the listing.
   */
  "shortDescription"?: string;
  /**
   * A long description of the listing.
   */
  "longDescription"?: string;
  /**
   * Contact information to use to get support from the publisher for the listing.
   */
  "supportContacts"?: Array<model.SupportContact>;
  "icon"?: model.UploadData;
  /**
   * The listing's package type.
   */
  "packageType"?: model.PackageTypeEnum;
  /**
   * In which catalog the listing should exist.
   */
  "listingType": model.ListingType;
  /**
   * List of operating systems supprted.
   */
  "supportedOperatingSystems"?: Array<model.OperatingSystem>;
  /**
    * The date and time this publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339)
* timestamp format.
* <p>
Example: `2016-08-25T21:10:29.600Z`
* 
    */
  "timeCreated"?: Date;
  /**
   * The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces.
   * For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
   * Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
   *
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
  /**
   * The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no
   * predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
   * Example: `{\"Department\": \"Finance\"}`
   *
   */
  "freeformTags"?: { [key: string]: string };
}

export namespace Publication {
  export enum LifecycleState {
    Creating = "CREATING",
    Active = "ACTIVE",
    Deleting = "DELETING",
    Deleted = "DELETED",
    Failed = "FAILED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: Publication): object {
    const jsonObj = {
      ...obj,
      ...{
        "supportContacts": obj.supportContacts
          ? obj.supportContacts.map(item => {
              return model.SupportContact.getJsonObj(item);
            })
          : undefined,
        "icon": obj.icon ? model.UploadData.getJsonObj(obj.icon) : undefined,

        "supportedOperatingSystems": obj.supportedOperatingSystems
          ? obj.supportedOperatingSystems.map(item => {
              return model.OperatingSystem.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: Publication): object {
    const jsonObj = {
      ...obj,
      ...{
        "supportContacts": obj.supportContacts
          ? obj.supportContacts.map(item => {
              return model.SupportContact.getDeserializedJsonObj(item);
            })
          : undefined,
        "icon": obj.icon ? model.UploadData.getDeserializedJsonObj(obj.icon) : undefined,

        "supportedOperatingSystems": obj.supportedOperatingSystems
          ? obj.supportedOperatingSystems.map(item => {
              return model.OperatingSystem.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
