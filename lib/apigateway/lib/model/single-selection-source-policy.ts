/**
 * API Gateway API
 * API for the API Gateway service. Use this API to manage gateways, deployments, and related items.
For more information, see
[Overview of API Gateway](/iaas/Content/APIGateway/Concepts/apigatewayoverview.htm).

 * OpenAPI spec version: 20190501
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Information around selector used for branching among routes/ authentication servers in dynamic routing/ authentication where we are allowed to specify only a single context variable as selector.
 */
export interface SingleSelectionSourcePolicy extends model.SelectionSourcePolicy {
  /**
   * String describing the context variable used as selector.
   */
  "selector": string;

  "type": string;
}

export namespace SingleSelectionSourcePolicy {
  export function getJsonObj(obj: SingleSelectionSourcePolicy, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.SelectionSourcePolicy.getJsonObj(obj) as SingleSelectionSourcePolicy)),
      ...{}
    };

    return jsonObj;
  }
  export const type = "SINGLE";
  export function getDeserializedJsonObj(
    obj: SingleSelectionSourcePolicy,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.SelectionSourcePolicy.getDeserializedJsonObj(obj) as SingleSelectionSourcePolicy)),
      ...{}
    };

    return jsonObj;
  }
}
