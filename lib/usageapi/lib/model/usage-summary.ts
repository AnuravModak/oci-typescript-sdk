/**
 * Usage API
 * A description of the UsageApi API.
 * OpenAPI spec version: 20200107
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The result from usage store.
 */
export interface UsageSummary {
  /**
   * The OCID of the compartment.
   */
  "compartmentId"?: string;
  /**
   * The path of the compartment, starting from root.
   */
  "compartmentPath"?: string;
  /**
   * The name of the compartment.
   */
  "compartmentName"?: string;
  /**
   * The name of the service that is incurring the cost.
   */
  "service"?: string;
  /**
   * The name of the resource that is incurring the cost.
   */
  "resourceName"?: string;
  /**
   * The Ocid of the resource that is incurring the cost.
   */
  "resourceId"?: string;
  /**
   * The region of the usage.
   */
  "region"?: string;
  /**
   * The availability domain of the usage.
   */
  "ad"?: string;
  /**
   * The size of resource being metered.
   */
  "weight"?: number;
  /**
   * The shape of the resource.
   */
  "shape"?: string;
  /**
   * The part number of the SKU.
   */
  "skuPartNumber"?: string;
  /**
   * The friendly name for the SKU.
   */
  "skuName"?: string;
  /**
   * The unit of the usage.
   */
  "unit"?: string;
  /**
   * The discretionary discount applied to the SKU.
   */
  "discount"?: number;
  /**
   * The list rate for the SKU (not discount).
   */
  "listRate"?: number;
  /**
   * Platform for the cost.
   */
  "platform"?: string;
  /**
   * The start time of the usage.
   */
  "timeUsageStarted": Date;
  /**
   * The end time of the usage.
   */
  "timeUsageEnded": Date;
  /**
   * The computed cost.
   */
  "computedAmount"?: number;
  /**
   * The usage number.
   */
  "computedQuantity"?: number;
  /**
   * The SPM OverageFlag.
   */
  "overagesFlag"?: string;
  /**
   * The price per unit.
   */
  "unitPrice"?: number;
  /**
   * The currency for the price.
   */
  "currency"?: string;
  /**
   * The subscription Id.
   */
  "subscriptionId"?: string;
  /**
   * The overage usage.
   */
  "overage"?: string;
  /**
   * For grouping, a tag definition. For filtering, a definition and key
   */
  "tags"?: Array<model.Tag>;
}

export namespace UsageSummary {
  export function getJsonObj(obj: UsageSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "tags": obj.tags
          ? obj.tags.map(item => {
              return model.Tag.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
