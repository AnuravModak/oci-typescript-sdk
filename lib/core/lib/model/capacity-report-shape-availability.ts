/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The capacity availability details for a requested shape.
 *
 */
export interface CapacityReportShapeAvailability {
  /**
    * A fault domain is a grouping of hardware and infrastructure within an availability domain.
* Each availability domain contains three fault domains. Fault domains let you distribute your
* instances so that they are not on the same physical hardware within a single availability domain.
* A hardware failure or Compute hardware maintenance that affects one fault domain does not affect
* instances in other fault domains.
* <p>
If you do not specify the fault domain, the capacity report will be applicable to all fault domains.
* 
    */
  "faultDomain"?: string;
  /**
   * The shape for the compute capacity report availability details.
   *
   */
  "instanceShape"?: string;
  "instanceShapeConfig"?: model.CapacityReportInstanceShapeConfig;
  /**
   * The total number of instances that are available to launch new instances. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "availableCount"?: number;
  /**
   * The flag denoting whether capacity is available.
   */
  "availabilityStatus"?: CapacityReportShapeAvailability.AvailabilityStatus;
}

export namespace CapacityReportShapeAvailability {
  export enum AvailabilityStatus {
    OutOfHostCapacity = "OUT_OF_HOST_CAPACITY",
    HardwareNotSupported = "HARDWARE_NOT_SUPPORTED",
    Available = "AVAILABLE",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: CapacityReportShapeAvailability): object {
    const jsonObj = {
      ...obj,
      ...{
        "instanceShapeConfig": obj.instanceShapeConfig
          ? model.CapacityReportInstanceShapeConfig.getJsonObj(obj.instanceShapeConfig)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: CapacityReportShapeAvailability): object {
    const jsonObj = {
      ...obj,
      ...{
        "instanceShapeConfig": obj.instanceShapeConfig
          ? model.CapacityReportInstanceShapeConfig.getDeserializedJsonObj(obj.instanceShapeConfig)
          : undefined
      }
    };

    return jsonObj;
  }
}
