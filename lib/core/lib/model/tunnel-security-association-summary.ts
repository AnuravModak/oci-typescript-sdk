/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Detailed Tunnel SA
 */
export interface TunnelSecurityAssociationSummary {
  /**
   * IP and mask of the Partner Subnet for Policy Based VPNs or Static Routes
   */
  "cpeSubnet"?: string;
  /**
   * IP and mask of the Local Subnet for Policy Based VPNs or Static Routes
   */
  "oracleSubnet"?: string;
  /**
   * Phase 1 Status of the Tunnel
   */
  "tunnelSaStatus"?: TunnelSecurityAssociationSummary.TunnelSaStatus;
  /**
   * Current state if status is not up, including phase1/phase2 and possible reason for tunnel not up
   */
  "tunnelSaErrorInfo"?: string;
  /**
   * Seconds in current state
   */
  "time"?: string;
}

export namespace TunnelSecurityAssociationSummary {
  export enum TunnelSaStatus {
    Initiating = "INITIATING",
    Listening = "LISTENING",
    Up = "UP",
    Down = "DOWN",
    Error = "ERROR",
    Unknown = "UNKNOWN",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: TunnelSecurityAssociationSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: TunnelSecurityAssociationSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
