/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Summary of the LogAnalytics.
 */
export interface LogAnalyticsSummary {
  /**
   * Unique identifier that is immutable on creation
   */
  "id": string;
  /**
   * LogAnalytics Identifier, can be renamed
   */
  "displayName"?: string;
  /**
   * Compartment Identifier
   */
  "compartmentId": string;
  /**
   * Type of the LogAnalytics.
   */
  "logAnalyticsType": string;
  /**
   * The time the the LogAnalytics was created. An RFC3339 formatted datetime string
   */
  "timeCreated"?: Date;
  /**
   * The time the LogAnalytics was updated. An RFC3339 formatted datetime string
   */
  "timeUpdated"?: Date;
  /**
   * The current state of the LogAnalytics.
   */
  "lifecycleState"?: model.LifecycleStates;
  /**
   * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
   */
  "lifecycleDetails"?: string;
}

export namespace LogAnalyticsSummary {
  export function getJsonObj(obj: LogAnalyticsSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
