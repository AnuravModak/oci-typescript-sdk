/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * A Single Entity Type Definition
 */
export interface OutOfBoxEntityTypeDetails {
  /**
   * Log analytics entity type name.
   *
   */
  "name": string;
  /**
   * Internal name for the log analytics entity type.
   *
   */
  "internalName": string;
  /**
   * Log analytics entity type category. Category will be used for grouping and filtering.
   *
   */
  "category": string;
  /**
   * Log analytics entity type group. Supported values: ClOUD, NON_CLOUD.
   *
   */
  "cloudType": OutOfBoxEntityTypeDetails.CloudType;
  /**
   * A Single Entity Type Property Definition
   */
  "properties"?: Array<model.EntityTypeProperty>;
}

export namespace OutOfBoxEntityTypeDetails {
  export enum CloudType {
    Cloud = "CLOUD",
    NonCloud = "NON_CLOUD"
  }

  export function getJsonObj(obj: OutOfBoxEntityTypeDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "properties": obj.properties
          ? obj.properties.map(item => {
              return model.EntityTypeProperty.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
