/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details of Upload File.
 */
export interface UploadFileSummary {
  /**
   * Unique internal identifier to refer to upload file
   */
  "reference": string;
  /**
   * Name of the file
   */
  "name": string;
  /**
   * Processing status of the file.
   */
  "status"?: UploadFileSummary.Status;
  /**
   * Number of estimated chunks for this file. A chunk is a portion of the log file used for the processing.
   */
  "totalChunks"?: number;
  /**
   * Number of chunks processed
   */
  "chunksConsumed"?: number;
  /**
   * Number of chunks processed successfully
   */
  "chunksSuccess"?: number;
  /**
   * Number of chunks failed processing
   */
  "chunksFail"?: number;
  /**
   * The time when this file processing started
   */
  "timeStarted"?: Date;
  /**
   * Name of the log source used for processing this file
   */
  "sourceName"?: string;
  /**
   * Name of the entity type
   */
  "entityType"?: string;
  /**
   * Name of the entity associated with the file.
   */
  "entityName"?: string;
  /**
   * Log namespace associated with the file.
   */
  "logNamespace"?: string;
  /**
   * Log group OCID associated with the file.
   */
  "logGroupId"?: string;
  /**
   * Log group name associated with the file.
   */
  "logGroupName"?: string;
  /**
   * The details about upload processing failure
   */
  "failureDetails"?: string;
}

export namespace UploadFileSummary {
  export enum Status {
    InProgress = "IN_PROGRESS",
    Successful = "SUCCESSFUL",
    Failed = "FAILED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: UploadFileSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
