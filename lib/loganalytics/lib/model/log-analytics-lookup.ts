/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * LogAnalyticsLookup
 */
export interface LogAnalyticsLookup {
  /**
   * active edit version Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "activeEditVersion"?: number;
  /**
   * canonical link
   */
  "canonicalLink"?: string;
  /**
   * description
   */
  "description"?: string;
  /**
   * edit version Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "editVersion"?: number;
  /**
   * fields
   */
  "fields"?: Array<model.LookupField>;
  /**
   * The lookup reference as an integer. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "lookupReference"?: number;
  /**
   * The lookup reference as a string.
   */
  "lookupReferenceString"?: string;
  /**
   * The lookup type.  Valid values are LOOKUP or DICTIONARY.
   */
  "type"?: LogAnalyticsLookup.Type;
  /**
   * iname
   */
  "name"?: string;
  /**
   * is built in Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "isBuiltIn"?: number;
  /**
   * is hidden
   */
  "isHidden"?: boolean;
  /**
   * name
   */
  "lookupDisplayName"?: string;
  "referringSources"?: model.AutoLookups;
  "statusSummary"?: model.StatusSummary;
  /**
   * last updated date
   */
  "timeUpdated"?: Date;
}

export namespace LogAnalyticsLookup {
  export enum Type {
    Lookup = "Lookup",
    Dictionary = "Dictionary",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: LogAnalyticsLookup): object {
    const jsonObj = {
      ...obj,
      ...{
        "fields": obj.fields
          ? obj.fields.map(item => {
              return model.LookupField.getJsonObj(item);
            })
          : undefined,

        "referringSources": obj.referringSources
          ? model.AutoLookups.getJsonObj(obj.referringSources)
          : undefined,
        "statusSummary": obj.statusSummary
          ? model.StatusSummary.getJsonObj(obj.statusSummary)
          : undefined
      }
    };

    return jsonObj;
  }
}
