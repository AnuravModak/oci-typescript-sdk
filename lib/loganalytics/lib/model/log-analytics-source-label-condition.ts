/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * LogAnalyticsSourceLabelCondition
 */
export interface LogAnalyticsSourceLabelCondition {
  /**
   * message
   */
  "message"?: string;
  /**
   * visible flag
   */
  "isVisible"?: boolean;
  /**
   * block condition field
   */
  "blockConditionField"?: string;
  /**
   * block condition operator
   */
  "blockConditionOperator"?: string;
  /**
   * block condition value
   */
  "blockConditionValue"?: string;
  /**
   * condition value
   */
  "labelConditionValue"?: string;
  /**
   * list of condition values
   */
  "labelConditionValues"?: Array<string>;
  /**
   * content example
   */
  "contentExample"?: string;
  /**
   * enabled
   */
  "isEnabled"?: boolean;
  /**
   * field internal name
   */
  "fieldName"?: string;
  /**
   * Id Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "labelConditionId"?: number;
  /**
   * is system flag
   */
  "isSystem"?: boolean;
  /**
   * operator
   */
  "labelConditionOperator"?: string;
  /**
   * source Id Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "sourceId"?: number;
  /**
   * label display name
   */
  "labelDisplayName"?: string;
  /**
   * label storage field
   */
  "storageField"?: string;
  /**
   * label name
   */
  "labelName"?: string;
  /**
   * inline label exists in DB flag
   */
  "isInlineLabelExistingInDatabase"?: boolean;
}

export namespace LogAnalyticsSourceLabelCondition {
  export function getJsonObj(obj: LogAnalyticsSourceLabelCondition): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
