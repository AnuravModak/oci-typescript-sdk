/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * LogAnalyticsAssociation
 */
export interface LogAnalyticsAssociation {
  /**
   * failure message
   */
  "failureMessage"?: string;
  /**
   * Lama Idf
   */
  "agentId"?: string;
  /**
   * last attempt date
   */
  "timeLastAttempted"?: Date;
  /**
   * retry count Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "retryCount"?: number;
  /**
   * source name
   */
  "sourceName"?: string;
  /**
   * source display name
   */
  "sourceDisplayName"?: string;
  /**
   * source type internal name
   */
  "sourceTypeName"?: string;
  /**
   * lifeCycleState
   */
  "lifeCycleState"?: LogAnalyticsAssociation.LifeCycleState;
  /**
   * entity GUID
   */
  "entityId"?: string;
  /**
   * entity name
   */
  "entityName"?: string;
  /**
   * entity type internal name
   */
  "entityTypeName"?: string;
  /**
   * host name
   */
  "host"?: string;
  /**
   * Agent entity name
   */
  "agentEntityName"?: string;
  /**
   * entity type display name
   */
  "entityTypeDisplayName"?: string;
  /**
   * log group ocid
   */
  "logGroupId"?: string;
  /**
   * log group name
   */
  "logGroupName"?: string;
  /**
   * log group compartment
   */
  "logGroupCompartment"?: string;
}

export namespace LogAnalyticsAssociation {
  export enum LifeCycleState {
    Accepted = "ACCEPTED",
    InProgress = "IN_PROGRESS",
    Succeeded = "SUCCEEDED",
    Failed = "FAILED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: LogAnalyticsAssociation): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
