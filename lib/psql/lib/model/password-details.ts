/**
 * PGSQL Control Plane API
 * A description of the PGSQL Control Plane API
 * OpenAPI spec version: 20220915
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details for the DbSystem password.
 * Password can be passed as `VaultSecretPasswordDetails`(Vault) or `PlainTextPasswordDetails`.
 *
 */
export interface PasswordDetails {
  "passwordType": string;
}

export namespace PasswordDetails {
  export function getJsonObj(obj: PasswordDetails): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "passwordType" in obj && obj.passwordType) {
      switch (obj.passwordType) {
        case "PLAIN_TEXT":
          return model.PlainTextPasswordDetails.getJsonObj(
            <model.PlainTextPasswordDetails>(<object>jsonObj),
            true
          );
        case "VAULT_SECRET":
          return model.VaultSecretPasswordDetails.getJsonObj(
            <model.VaultSecretPasswordDetails>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.passwordType}`);
      }
    }
    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: PasswordDetails): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "passwordType" in obj && obj.passwordType) {
      switch (obj.passwordType) {
        case "PLAIN_TEXT":
          return model.PlainTextPasswordDetails.getDeserializedJsonObj(
            <model.PlainTextPasswordDetails>(<object>jsonObj),
            true
          );
        case "VAULT_SECRET":
          return model.VaultSecretPasswordDetails.getDeserializedJsonObj(
            <model.VaultSecretPasswordDetails>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.passwordType}`);
      }
    }
    return jsonObj;
  }
}
