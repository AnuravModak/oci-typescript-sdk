/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Describes the modification parameters for the maintenance run.
 *
 */
export interface UpdateMaintenanceRunDetails {
  /**
   * If `FALSE`, skips the maintenance run.
   */
  "isEnabled"?: boolean;
  /**
   * The scheduled date and time of the maintenance run to update.
   */
  "timeScheduled"?: Date;
  /**
   * If set to `TRUE`, starts patching immediately.
   */
  "isPatchNowEnabled"?: boolean;
  /**
   * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the patch to be applied in the maintenance run.
   */
  "patchId"?: string;
  /**
   * Cloud Exadata infrastructure node patching method, either \"ROLLING\" or \"NONROLLING\". Default value is ROLLING.
   * <p>
   *IMPORTANT*: Non-rolling infrastructure patching involves system down time. See [Oracle-Managed Infrastructure Maintenance Updates](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/examaintenance.htm#Oracle) for more information.
   *
   */
  "patchingMode"?: UpdateMaintenanceRunDetails.PatchingMode;
}

export namespace UpdateMaintenanceRunDetails {
  export enum PatchingMode {
    Rolling = "ROLLING",
    Nonrolling = "NONROLLING"
  }

  export function getJsonObj(obj: UpdateMaintenanceRunDetails): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: UpdateMaintenanceRunDetails): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
