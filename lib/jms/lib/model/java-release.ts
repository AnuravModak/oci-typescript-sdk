/**
 * Java Management Service API
 * API for the Java Management Service. Use this API to view, create, and manage Fleets.
 * OpenAPI spec version: 20210610
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Complete information of a specific release of Java. Includes the artifact details.
 *
 */
export interface JavaRelease {
  /**
   * List of Java artifacts.
   */
  "artifacts"?: Array<model.JavaArtifact>;
  /**
   * Java release version identifier.
   */
  "releaseVersion": string;
  /**
   * Java release family identifier.
   */
  "familyVersion": string;
  /**
   * Parent Java release version identifier. This is applicable for BPR releases.
   */
  "parentReleaseVersion"?: string;
  /**
   * The security status of the Java version.
   */
  "securityStatus": model.JreSecurityStatus;
  /**
   * Release category of the Java version.
   */
  "releaseType": model.ReleaseType;
  /**
   * License type for the Java version.
   */
  "licenseType": model.LicenseType;
  "familyDetails"?: model.JavaFamily;
  "licenseDetails"?: model.JavaLicense;
  /**
   * The release date of the Java version (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
   */
  "releaseDate": Date;
  /**
   * Release notes associated with the Java version.
   */
  "releaseNotesUrl": string;
}

export namespace JavaRelease {
  export function getJsonObj(obj: JavaRelease): object {
    const jsonObj = {
      ...obj,
      ...{
        "artifacts": obj.artifacts
          ? obj.artifacts.map(item => {
              return model.JavaArtifact.getJsonObj(item);
            })
          : undefined,

        "familyDetails": obj.familyDetails
          ? model.JavaFamily.getJsonObj(obj.familyDetails)
          : undefined,
        "licenseDetails": obj.licenseDetails
          ? model.JavaLicense.getJsonObj(obj.licenseDetails)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: JavaRelease): object {
    const jsonObj = {
      ...obj,
      ...{
        "artifacts": obj.artifacts
          ? obj.artifacts.map(item => {
              return model.JavaArtifact.getDeserializedJsonObj(item);
            })
          : undefined,

        "familyDetails": obj.familyDetails
          ? model.JavaFamily.getDeserializedJsonObj(obj.familyDetails)
          : undefined,
        "licenseDetails": obj.licenseDetails
          ? model.JavaLicense.getDeserializedJsonObj(obj.licenseDetails)
          : undefined
      }
    };

    return jsonObj;
  }
}
